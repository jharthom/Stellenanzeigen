name: 1-Website Monitor

on:
  workflow_dispatch:

jobs:
  check_websites:
    runs-on: ubuntu-latest
    
    steps:
    - name: Repository klonen
      uses: actions/checkout@v4

    - name: Setze Up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Installiere Abhängigkeiten
      run: |
        python -m pip install --upgrade pip
        pip install requests

    # Check if the artifact exists
    - name: Check if previous artifact exists
      id: check_artifact
      run: |
        if curl --head --silent --fail --output /dev/null \
        "$ACTIONS_RUNTIME_URL/_apis/pipelines/workflows/$GITHUB_RUN_ID/artifacts"; then
          echo "exists=true" >> $GITHUB_ENV
        else
          echo "exists=false" >> $GITHUB_ENV

    # Download the artifact if it exists
    - name: Download previous website hash file
      if: env.exists == 'true'
      uses: actions/download-artifact@v3
      with:
        name: website-hashes
        path: .

    - name: Führe das Skript aus
      env:
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_PASSWORD: ${{ secrets.SENDER_PASSWORD }}
        RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
      run: python 1_check_updates.py

    - name: Save website hash file as artifact
      uses: actions/upload-artifact@v3
      with:
        name: website-hashes
        path: website_hashes.txt
